devtools::use_package("statnet")
installed.packages("statnet")
usethis::use_package("igraph")
usethis::use_package("igraph")
usethis::use_package(igraph)
install.packages("igraph")
install.packages("igraph")
usethis::use_package("igraph")
usethis::create_package("~/multinets")
help(usethis)
??usethis
q()
devtools::load_all()
install.packages(c("ape", "devtools", "glue", "lazyeval", "lintr", "lubridate", "multcomp", "openssl", "plm", "rlang", "rmarkdown", "robustbase", "tidyselect", "tidyverse"))
q()
devtools::load_all()
devtools::load_all()
devtools::load_all()
help(is_multilevel)
devtools::document()
help(is_multilevel)
devtools::document()
help(is_multilevel)
devtools::document()
help(is_multilevel)
devtools::document()
help(is_multilevel)
devtools::document()
help(is_multilevel)
help(layout_multilevel)
help(multinets)
devtools::document()
help(layout_multilevel)
help("layout")
devtools::document()
help(layout_multilevel)
devtools::document()
help(layout_multilevel)
devtools::document()
help("layout")
help(layout_with_fr)
devtools::document()
help(layout_multilevel)
devtools::document()
help(layout_multilevel)
devtools::document()
help(layout_multilevel)
usethis::use_package("igraph")
help("adjustcolor")
devtools::document()
help(set_color_multilevel)
devtools::load_all()
citation("multinets")
devtools::load_all()
citation("multinets")
devtools::load_all()
citation("multinets")
citation("multinets")
devtools::load_all()
citation("multinets")
devtools::load_all()
citation("multinets")
devtools::load_all()
is_multilevel()
devtools::document()
devtools::document()
help(set_color_multilevel)
devtools::document()
help(is_multilevel)
help(layout_multilevel)
devtools::document()
help(layout_multilevel)
devtools::document()
help(layout_multilevel)
devtools::document()
help(layout_multilevel)
devtools::document()
help(layout_multilevel)
help(set_color_multilevel)
devtools::document()
help(set_shape_multilevel)
help(set_color_multilevel)
devtools::document()
help(set_color_multilevel)
help(set_shape_multilevel)
help(layout_multilevel)
q()
devtools::document()
help(extract_highlevel)
devtools::document()
help(extract_highlevel)
help(extract_lowlevel)
devtools::document()
devtools::document()
help(mode_transformation)
help(extract_highlevel)
devtools::document()
help(extract_highlevel)
devtools::document()
help(extract_highlevels)
help(extract_highlevel)
devtools::document()
help(extract_highlevel)
devtools::document()
help(extract_highlevel)
data(package = "igraphdata")
data(package = "igraph")
data(package = "sand")
help(g.bip)
help(sand::g.bip)
help("sand::g.bip")
library(sand)
help(g.bip)
plot(g.bip)
devtools::document()
help(mode_transformation)
devtools::document()
help(mode_transformation)
help(smallworkd)
help(smallworld)
smallworld(50, 10, 6, .7)
igraph::smallworld(50, 10, 6, .7)
igraph::sample_smallworld(50, 10, 6, .7)
igraph::sample_smallworld(50, 10, 6, .7)
igraph::sample_smallworld(5, 100, 6, .7)
igraph::sample_smallworld(1, 100, 6, .7)
igraph::sample_smallworld(2, 200, 3, .7)
igraph::sample_smallworld(2, 50, 3, .7)
igraph::sample_smallworld(2, 50, 2, .7)
igraph::sample_smallworld(1, 50, 2, .7)
igraph::sample_smallworld(1, 50, 3, .7)
igraph::sample_smallworld(1, 50, , .7)
igraph::sample_smallworld(1, 50, 4, .7)
igraph::sample_smallworld(1, 150, 4, .7)
g = igraph::sample_smallworld(1, 150, 4, .6)
g
plot(g)
plot(g, vertex.label=NA, vertex.size=5)
plot(g, vertex.label=NA, vertex.size=5, layout_with_kk)
plot(g, vertex.label=NA, vertex.size=5, layout=layout_with_kk)
plot(g, vertex.label=NA, vertex.size=5, layout=igraph::layout_with_kk)
g = igraph::sample_smallworld(1, 150, 4, .5)
plot(g, vertex.label=NA, vertex.size=5, layout=igraph::layout_with_kk)
g
degree(g)
igraph::degree(g)
hist(igraph::degree(g))
hist(igraph:degree(lazega))
hist(igraph:degree(sand::lazega))
hist(igraph::degree(sand::lazega))
g
plot(g)
plot(g, vertex.label=NA, vertex.size=5, layout=igraph::layout_with_kk)
help(multilevel_community)
help(multilevel.community)
g
igraph::any_multiple(g)
igraph::is.loop(g)
igraph::simplify(g)
matriz = igraph::as_adjacency_matrix(g)
class(matriz)
View(matriz)
matriz = as.matrix(matriz)
View(matriz)
linked_sim = igraph::graph_from_adjacency_matrix(matriz, mode="directed")
linked_sim
plot(linked_sim)
linked_sim = igraph::graph_from_adjacency_matrix(matriz, mode="undirected")
linked_sim
plot(linked_sim, vertex.label = NA, vertex.size=5)
tipo = c(rep(FALSE, 100), rep(TRUE, 50))
tipo
V(linked_sim)$type = tipo
igraph::V(linked_sim)$type = tipo
igraph::is.bipartite(linked_sim)
is_multilevel(linked_sim)
devtools::load_all()
igraph::is_bipartite(linked_sim)
is_multilevel(linked_sim)
test = set_color_multilevel(linked_sim)
test = set_shape_multilevel(test)
l = layout_multilevel(test)
devtools::load_all()
l = layout_multilevel(test)
igraph::plot(test, layout = l)
plot(test, layout = l)
plot(test, layout = l, vertex.label = NA, vertex.size=5)
plot(test, layout = l, vertex.label = NA, vertex.size=5, edge.width=2)
devtools::document()
test = set_color_multilevel(test)
plot(test, layout = l, vertex.label = NA, vertex.size=5, edge.width=2)
ex1 = extract_highlevel(test)
devtools::document()
ex1 = extract_highlevel(test)
ex2 = extract_lowlevel(test)
ex3 = extract_mesolevel(test)
plot(ex1)
plot(ex1, vertex.label=NA)
plot(ex2, vertex.label=NA)
plot(ex3, vertex.label=NA)
plot(ex3, vertex.label=NA, vertex.size=5)
plot(ex3, vertex.label=NA, vertex.size=5, layout=igraph::layout.bipartite)
transformacao = mode_transformation(ex3)
devtools::document()
transformacao = mode_transformation(ex3)
plot(transformacao$proj1)
plot(transformacao$proj2)
linked_sim
linked_sim
igraph::is_bipartite(linked_sim)
is_multilevel(linked_sim)
linked_sim
devtools::use_data(linked_sim)
linked_sim_matrix = as.matrix(igraph::as_adjacency_matrix(linked_sim))
linked_sim_matrix
devtools::use_data(linked_sim_matrix)
igraph::vertex_attr(linked_sim, "type")
linked_sim_type = igraph::vertex_attr(linked_sim, "type")
devtools::use_data(linked_sim_type)
linked_sim_matrix
class(linked_sim_matrix)
class(linked_sim_type)
linked_sim_type
View(ex2)
transformado_h <- mode_transformation(ex3)
plot(transformado_h)
transformado_h <- mode_transformation(ex3, "high")
plot(transformado_h)
#linked_sim
linked_sim
devtools::document()
help(linked_sim)
help(lazega)
q()
devtools::load_all()
data(package = "multinet")
data(package = "multinets")
data(package = "multinets")
devtools::document()
help(linked_sim_matri)
help(linked_sim_matrix)
help(linked_sim)
devtools::document()
help(linked_sim)
help(linked_sim_matrix)
devtools::document()
help(linked_sim_matrix)
help(linked_sim)
devtools::document()
q()
devtools::document()
help(linked_sim_matrix)
devtools::document()
help(linked_sim_matrix)
help(linked_sim_type)
help(linked_sim)
help(extract_highlevel)
devtools::document()
help(extract_highlevel)
devtools::use_testthat()
library(testthat)
data(package="igraph")
data(package="igraphdata")
devtools::test
devtools::test()
igraphdata::g.bip
devtools::test()
data(package="sand")
devtools::test()
devtools::test()
devtools::test()
q()
devtools::load_all()
devtools::load_all()
devtools::load_all()
library(testthat)
devtools::use_package("sand", "Suggests")
devtools::test()
help(is_multilevel)
help(layout_multilevel)
devtools::document()
help(layout_multilevel)
help(extract_highlevel)
help(extract_lowlevel)
help(extract_mesolevel)
help(mode_transformation)
devtools::document()
help(mode_transformation)
help(linked_sim)
citation(multilevel)
citation(multinets)
citation("multinets")
usethis::use_gpl3_license()
citation("multinets")
devtools::load_all()
devtools::document()
citation("multinets")
usethis::use_readme_rmd()
help(package="multinets")
devtools::check()
devtools::document()
help(is_multilevel)
help(set_shape_multilevel)
devtools::check()
library(statnet)
install.packages("statnet", dep=T)
devtools::check()
devtools::document()
devtools::check()
q()
is_multilevel
devtools::install_github("neylsoncrepalde/multinets")
q()
